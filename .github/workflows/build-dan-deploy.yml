name: Build dan Deploy PUMA Reporting

on:
    push:
        branches:
            - main

jobs:
    # -----------------------------------
    # 1. BUILD MENGGUNAKAN WINDOWS RUNNER
    # -----------------------------------
    build-aplikasi:
        name: Build Windows Executable
        runs-on: windows-latest
        environment: production

        steps:
            - name: Checkout code di repository
              uses: actions/checkout@v5
              with:
                submodules: true
                token: ${{ secrets.SUBMODULE_PAT }}
            
            - name: Set up Python
              uses: actions/setup-python@v6
              with:
                python-version: 3.11

            - name: Install dependencies
              run: |
                pip install --upgrade pip
                pip install pyinstaller -r requirements.txt

            - name: Menulis .env file dalam runner
              shell: bash
              run: |
                cat <<EOF > .env
                DB_SERVER=${{ secrets. DB_SERVER }}
                DB_PORT=${{ secrets.DB_PORT }}
                DB_DATABASE=${{ secrets.DB_DATABASE }}
                DB_UID=${{ secrets.DB_UID }}
                DB_PWD=${{ secrets.DB_PWD }}
                SFTP_HOST=${{ secrets.SFTP_HOST }}
                SFTP_PORT=${{ secrets.SFTP_PORT }}
                SFTP_USER=${{ secrets.SFTP_USER }}
                SFTP_PASSWORD=${{ secrets.SFTP_PASSWORD }}
                GMAIL_ACCOUNT=${{ secrets.GMAIL_ACCOUNT }}
                GMAIL_APP_PASSWORD=${{ secrets.GMAIL_APP_PASSWORD }}
                TO_ADDRESS=${{ secrets.CC_ADDRESS }}
                CC_ADDRESS=${{ secrets.CC_ADDRESS }}
                BCC_ADDRESS=${{ secrets.BCC_ADDRESS }}
                EOF

            - name: Build PUMA Reporting
              run: |
                pyinstaller --onefile \
                  --name "${{ secrets.NAMA_APLIKASI }}" \
                  --collect-all mssql_python \
                  --add-binary "$(python -c 'import mssql_python, os; print(os.path.join(os.path.dirname(mssql_python.__file__), "ddbc_bindings.cp311-amd64.pyd"))');mssql_python" \
                  --add-data ".env;." \
                  main.py
              shell: bash
            
            - name: Upload artifak
              uses: actions/upload-artifact@v4
              with:
                name: puma-reporting
                path: dist/${{ secrets.NAMA_APLIKASI }}.exe

    # -------------------------------------
    # DEPLOY KE PRODUKSI VIA BASTION RUNNER
    # -------------------------------------
    deploy-aplikasi:
        name: Deploy ke Windows Server
        runs-on: self-hosted
        needs: build-aplikasi
        environment: production

        steps:
            - name: Unduh artifak PUMA Reporting
              uses: actions/download-artifact@v5
              with:
                name: puma-reporting

            - name: Verifikasi artifak
              run: |
                ls -lh
                file ${{ secrets.NAMA_APLIKASI }}.exe

            - name: Buat folder di destinasi jika belum ada
              run: |
                sshpass -p "${{ secrets.WIN_PASS }}" ssh -o StrictHostKeyChecking=no ${{ secrets.WIN_USER }}@${{ secrets.WIN_HOST }} \
                powershell -NoProfile -NonInteractive -Command "New-Item -ItemType Directory -Path '${{ secrets.WIN_TARGET_FOLDER }}' -Force"
              shell: bash

            - name: Letakkan executable di folder destinasi (overwriting)
              run: |
                sshpass -p "${{ secrets.WIN_PASS }}" scp -o StrictHostKeyChecking=no ${{ secrets.NAMA_APLIKASI }}.exe ${{ secrets.WIN_USER }}@${{ secrets.WIN_HOST }}:"${{ secrets.WIN_TARGET_FOLDER }}/${{ secrets.NAMA_APLIKASI}}.exe"
              shell: bash